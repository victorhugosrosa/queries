-- -------------------------------------------------------------------------------------------------------------------------------------------------------------
-- RELOAD DW ANAL_TICKET E MOVTO_CAIXA (BUSCA CUPONS NÃO INTEGRADOS POR DIA)
-- -------------------------------------------------------------------------------------------------------------------------------------------------------------
	DECLARE @DT_INI AS DATE = CONVERT(DATE,GETDATE()-45);
	DECLARE @DT_FIM AS DATE = CONVERT(DATE,GETDATE()-1);
	DECLARE @COD_LOJA INT;
	DECLARE @DATA DATE;
	
	DECLARE @TAB_CUPOMS_FALTANTES AS TABLE
	(
		COD_LOJA INT
		,PDV INT
		,CUPOM INT
		,DATA DATE	
	)
	
	INSERT INTO @TAB_CUPOMS_FALTANTES
	SELECT DISTINCT
		M02.COD_LOJA
		,M02.CAIXA
		,M02.CUPOM	
		,M02.DATA
	FROM
	(
	SELECT 
		'ZAN_M02' AS BASE
		,M00ZA AS COD_LOJA
		,CONVERT(DATE,M00AF) AS DATA
		,M00AC AS CAIXA
		,M00AD AS CUPOM
		,M02AK - M02AL AS VALOR_TOTAL	 -- VALOR TOTAL
	FROM  [ZEUSRETAIL].DBO.ZAN_M02 WITH (NOLOCK)
	WHERE 1 = 1
		AND M00AF >= @DT_INI
		AND M00AF <= @DT_FIM
		--AND M00ZA IN (1)
		AND M02AE IN(1110,1111,1112,1113,1114,147,1147) 
	) AS M02
		LEFT JOIN
	(
	SELECT
		'BI_ANAL_MOVTO_CAIXA' AS BASE
		,COD_LOJA
		,CONVERT(DATE,DATA) AS DATA
		,CAIXA
		,CUPOM
		,VALOR_TOTAL
	FROM DW.DBO.BI_ANAL_MOVTO_CAIXA
	WHERE 1 = 1
		AND DATA >= @DT_INI
		AND DATA <= @DT_FIM
		--AND COD_LOJA IN (1)
	) AS MOVTO_CAIXA ON (M02.COD_LOJA = MOVTO_CAIXA.COD_LOJA AND M02.DATA = MOVTO_CAIXA.DATA AND M02.CAIXA = MOVTO_CAIXA.CAIXA AND M02.CUPOM = MOVTO_CAIXA.CUPOM)
	WHERE 1 = 1
		AND MOVTO_CAIXA.BASE IS NULL	
		
	DECLARE @TAB_CUPOMS_CANCELADOS AS TABLE
	(
		COD_LOJA INT
		,PDV INT
		,CUPOM INT
		,DATA DATE	
		,CUPOM_CANCELADO INT
	)	
	
	INSERT INTO @TAB_CUPOMS_CANCELADOS
	SELECT DISTINCT 
		M00ZA AS COD_LOJA, 
		M00AC AS PDV, 
		M00AD AS CUPOM,
		CONVERT(VARCHAR, M00AF, 101) AS DATA,
		M00AD - 1 AS CUPOM_CANCELADO
	FROM 
		ZEUSRETAIL.DBO.ZAN_M02 WITH (NOLOCK) 
	WHERE 1 = 1
		AND M00AF >= @DT_INI
		AND M00AF <= @DT_FIM
		AND M02AE NOT IN ( 1110 , 1111, 1112 , 1113, 1114)	

	DECLARE DW_CUPOM_CURSOR CURSOR FOR 	
	-- -------------------------------------------------------------------------
	-- SELECT DO CURSOR BUSCANDO LOJAS/DATAS COM CUPONS NÃO CARREGADOS
	-- -------------------------------------------------------------------------
	SELECT DISTINCT
		C.COD_LOJA
		,C.DATA
	FROM
		@TAB_CUPOMS_FALTANTES AS C LEFT JOIN @TAB_CUPOMS_CANCELADOS AS CANC1 ON (C.COD_LOJA = CANC1.COD_LOJA and C.DATA = CANC1.DATA and C.PDV = CANC1.PDV and C.CUPOM = CANC1.CUPOM)
			LEFT JOIN @TAB_CUPOMS_CANCELADOS AS CANC2 ON (C.COD_LOJA = CANC2.COD_LOJA and C.DATA = CANC2.DATA and C.PDV = CANC2.PDV and C.CUPOM = CANC2.CUPOM_CANCELADO)
	WHERE 1 = 1
		AND CANC1.COD_LOJA IS NULL
		AND CANC2.COD_LOJA IS NULL
	
	OPEN DW_CUPOM_CURSOR

	FETCH NEXT FROM DW_CUPOM_CURSOR 
	INTO @COD_LOJA, @DATA

	WHILE @@FETCH_STATUS = 0
	BEGIN
		-- -------------------------------------------------------------------------
		-- LOOP DO CURSOR RODANDO A PROC PARA CADA DIA/LOJA QUE PRECISAR
		-- -------------------------------------------------------------------------
		EXEC [INTEGRACOES].[dbo].[DW_CARGA_MOVTO_PDV_01] @DATA, @DATA, @COD_LOJA
		
		FETCH NEXT FROM DW_CUPOM_CURSOR 
		INTO @COD_LOJA, @DATA
	END 
	CLOSE DW_CUPOM_CURSOR;
	DEALLOCATE DW_CUPOM_CURSOR;	
	