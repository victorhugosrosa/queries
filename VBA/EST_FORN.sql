USE [BI]
GO

/****** OBJECT:  STOREDPROCEDURE [DBO].[COMPRAS_ESTAT_FORN13X]    SCRIPT DATE: 02/24/2014 16:48:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
-- ---------------------------------------------------------------------------------------------------------------------------------------
-- VERSÂO DE PRODUÇÃO DA CALCULADORA
-- ---------------------------------------------------------------------------------------------------------------------------------------
-- EXEC [COMPRAS_ESTAT_FORN_PRODUCAO] 444, '20130925', '20131023'
CREATE PROCEDURE [DBO].[COMPRAS_ESTAT_FORN_PRODUCAO]
	@FORN [INT],
	@DATAINI [VARCHAR](8),
	@DATAFIM [VARCHAR](8),
	@CODSECAO [INT] = NULL , @COD_LOJA AS INT = NULL
WITH EXECUTE AS CALLER
AS
BEGIN
	-- EXEC [DBO].[COMPRAS_ESTAT_FORN] '20111212', 61, '20111212', '20111212'
	-- VENDA POR FORNECEDOR, SOMENTE PRODUTOS EM LINHA
SET NOCOUNT ON;

	DECLARE @DEBUGTEMPO AS INT = 1

	-- ----------------------------------------------------------------------------------------------
	-- TABELA PRINCIPAL COM OS DADOS DE PRODUTO
	-- ----------------------------------------------------------------------------------------------
	DECLARE @TAB_RETORNO AS TABLE
	(
		[ITEMID] VARCHAR(10) NULL 
		, [COD_FORNECEDOR] INT NULL 
		,[COD_PRODUTO] VARCHAR(13)
		,[COD_SECAO] INT 
		,[COD_LOJA] INT
		,[QTD_EMBALAGEM_COMPRA] NUMERIC(8,3)
		,[VAL_CUSTO_EMBALAGEM] FLOAT
		,[VAL_DESCONTO_PER_1] FLOAT
		,[DTA_ALTERACAO] VARCHAR(10)
		,[NO_PRODUTO] VARCHAR(255)
		,[NO_SECAO] VARCHAR(255)
		,[QTD_EST_ATUAL]  NUMERIC(18,3)
		,[TIPO] VARCHAR(50)
		,[IPV] CHAR(1)
		,[VAL_VENDA] FLOAT
		,[QTD_MINIMA_COMPRA] FLOAT
		,[DES_UNIDADE_COMPRA]  VARCHAR(10)
		,[DTA_ULT_MOV_VENDA] DATETIME
		,[DTA_ULT_COMPRA] DATETIME
		,[QTD_ULT_COMPRA] FLOAT
		,[COD_FORN_ULT_COMPRA] INT
		,[DES_UNIDADE_VENDA]   VARCHAR(10)
		,[DES_REFERENCIA]   VARCHAR(50)
		,[DES_UNIDADE_COMPRA_DANFE]   VARCHAR(10)
		,[NO_PRODUTO_DANFE]   VARCHAR(255)
		,[MULT_REFERENCIAS] VARCHAR(255)
		,ERRO BIT 
		,MENSAGEM VARCHAR(1000) 
		,FORA_MIX  VARCHAR(3)
		,ENVIA_PDV VARCHAR(3)
	)

	-- -----------------------------------------------------------------------------------------------------
	-- DADOS DO AX
	-- -----------------------------------------------------------------------------------------------------
	IF ISNULL(@COD_LOJA,0) = 0
		BEGIN
			INSERT INTO @TAB_RETORNO ([ITEMID] , COD_FORNECEDOR , COD_PRODUTO ,COD_LOJA , DES_REFERENCIA , FORA_MIX , ENVIA_PDV)
			SELECT
				AXF.ITEMID
				 , AXF.[COD_FORNECEDOR] AS COD_FORNECEDOR
				,AXF.[COD_PRODUTO] AS COD_PRODUTO
				,AXF.[COD_LOJA] AS COD_LOJA
				,AXF.DES_REFERENCIA
				,AXF.FORA_MIX
				,AXF.ENVIA_PDV
			FROM
				AX2009_INTEGRACAO.[DBO].[TAB_PRODUTO_REFERENCIA_CALC] AS AXF WITH (NOLOCK)
			WHERE 1 = 1
				AND AXF.[COD_FORNECEDOR] = @FORN

			DELETE FROM @TAB_RETORNO WHERE FORA_MIX = 'S' --AND ENVIA_PDV = 'N'				
		END
	ELSE
		BEGIN
			INSERT INTO @TAB_RETORNO ([ITEMID] , COD_FORNECEDOR , COD_PRODUTO ,COD_LOJA , DES_REFERENCIA )
			SELECT 
				AXF.ITEMID
				 , AXF.[COD_FORNECEDOR] AS COD_FORNECEDOR
				,AXF.[COD_PRODUTO] AS COD_PRODUTO
				,AXF.[COD_LOJA] AS COD_LOJA
				,AXF.DES_REFERENCIA
			FROM AX2009_INTEGRACAO.[DBO].[TAB_PRODUTO_FORNECEDOR] AS AXF WITH (NOLOCK)
				 , AX2009_INTEGRACAO.[DBO].VW_MARCHE_PRODUTO_SITUACAO AS AXPS WITH (NOLOCK)
			WHERE 1 = 1					
				AND AXPS.PROIBIDO_COMPRA = 'N'
				AND AXPS.COD_PRODUTO = AXF.COD_PRODUTO
				AND AXPS.COD_LOJA = AXF.COD_LOJA
				AND AXF.[COD_FORNECEDOR] = @FORN
				AND AXF.COD_LOJA = @COD_LOJA		
		END		
		
	-- -----------------------------------------------------------------------------------------------------
	-- 
	-- -----------------------------------------------------------------------------------------------------
	IF EXISTS (SELECT 1 FROM [192.168.0.6].ZEUS_RTG.DBO.TAB_FORNECEDOR WITH (NOLOCK) WHERE FLG_LIBERADO_NEOGRID = 1 AND COD_FORNECEDOR = @FORN )
	BEGIN
		DECLARE @LISTAPRODUTOS AS VARCHAR(8000) = ''
		
		SELECT @LISTAPRODUTOS = @LISTAPRODUTOS + CAST(COD_PRODUTO AS VARCHAR(20)) + ';'  FROM 
			(	
				SELECT DISTINCT COD_PRODUTO FROM @TAB_RETORNO
			) AS A
		
		DECLARE @TEMP_ANALISE TABLE (
			COD_PRODUTO INT NOT NULL,
			COD_EAN VARCHAR(20) , 
			PRODUTO  VARCHAR(255) , 
			CONTATO  VARCHAR(255) , 
			COD_ESPECIAL INT NULL ,
			ERRO BIT NULL , 
			MENSAGEM_NEOGRID VARCHAR(500) NULL
		)
		
		INSERT INTO @TEMP_ANALISE
		EXEC AX2009_INTEGRACAO.DBO.SP_MARCHE_VALIDAPRODUTOSDOPEDIDO NULL, @FORN , NULL ,  @LISTAPRODUTOS

		UPDATE B
		SET
			B.ERRO = A.ERRO,
			B.MENSAGEM = A.MENSAGEM_NEOGRID
		FROM
			@TEMP_ANALISE AS A INNER JOIN @TAB_RETORNO AS B ON (A.COD_PRODUTO = B.COD_PRODUTO)
		WHERE 1 = 1			
			
	END 

	-- -----------------------------------------------------------------------------------------------------
	-- 
	-- -----------------------------------------------------------------------------------------------------			
	UPDATE R
	SET
		R.MULT_REFERENCIAS = RIGHT(RTRIM(LTRIM(REF.EXTERNALITEMTXT)),255)
	FROM
		SMA_AX50_SP1_DB_PROD.DBO.CUSTVENDEXTERNALITEM AS REF INNER JOIN @TAB_RETORNO AS R ON (R.[ITEMID] COLLATE Latin1_General_CI_AS = REF.[ITEMID])
		AND RTRIM(LTRIM(REF.EXTERNALITEMTXT)) <> ''
		AND REF.[CUSTVENDRELATION] = @FORN
	
	UPDATE R
	SET
		R.DES_UNIDADE_COMPRA = COMPRA.UNITID	
	FROM
		SMA_AX50_SP1_DB_PROD.DBO.INVENTTABLEMODULE AS COMPRA WITH (NOLOCK) INNER JOIN @TAB_RETORNO AS R ON (R.[ITEMID] COLLATE Latin1_General_CI_AS = COMPRA.[ITEMID])
	WHERE 1 = 1
		AND COMPRA.MODULETYPE = 1
		AND COMPRA.DATAAREAID = 'BAR'
	
	UPDATE R
	SET
		R.DES_UNIDADE_VENDA = VENDA.UNITID	
	FROM
		SMA_AX50_SP1_DB_PROD.DBO.INVENTTABLEMODULE AS VENDA WITH (NOLOCK) INNER JOIN @TAB_RETORNO AS R ON (R.[ITEMID] COLLATE Latin1_General_CI_AS = VENDA.[ITEMID])
	WHERE 1 = 1
		AND VENDA.MODULETYPE = 2
		AND VENDA.DATAAREAID = 'BAR'

	UPDATE R
	SET 
		R.QTD_EMBALAGEM_COMPRA = UNID.MARCHEQTDEMBALAGEM
		,R.QTD_MINIMA_COMPRA  = UNID.MARCHEMULTIPLO
		,R.DES_UNIDADE_COMPRA  = UNID.MARCHEUNITID
	FROM
		AX2009_INTEGRACAO.DBO.TAB_PRODUTO_REFERENCIA   AS UNID WITH (NOLOCK) INNER JOIN @TAB_RETORNO AS R ON (UNID.COD_FORNECEDOR = R.COD_FORNECEDOR AND UNID.ITEMID COLLATE Latin1_General_CI_AS = R.ITEMID)
	WHERE 1 = 1
	
	-- ------------------------------------------------------------------------------------
	-- TABELA PRODUTO  
	-- -------------------------------------------------------------------------------------
	UPDATE R
	SET 
		R.COD_SECAO    = AXPR.[COD_SECAO]
		, R.NO_PRODUTO = AXPR.DES_PRODUTO
		, R.NO_SECAO   =  AXPH.DESCRICAO 
		, R.IPV        = AXPR.IPV
	FROM 
		AX2009_INTEGRACAO.[DBO].TAB_PRODUTO_SIMPLIFICADO AS AXPR WITH (NOLOCK) INNER JOIN AX2009_INTEGRACAO.[DBO].TAB_SECAO AS AXPH WITH (NOLOCK) ON (AXPH.COD_SECAO = AXPR.COD_SECAO)
			INNER JOIN @TAB_RETORNO AS R ON (R.COD_PRODUTO COLLATE Latin1_General_CI_AS = AXPR.COD_PRODUTO)
	WHERE 1 = 1
		AND ISNUMERIC(AXPH.COD_SECAO) =1 
		AND ISNUMERIC(AXPR.COD_SECAO) =1
	
	-- ------------------------------------------------------------------------------------
	-- DADOS DO ZEUS
	-- ------------------------------------------------------------------------------------
	UPDATE R
	SET 
		 R.VAL_CUSTO_EMBALAGEM = P.[VAL_CUSTO_EMBALAGEM] 
		,R.VAL_DESCONTO_PER_1 =  P.[VAL_DESCONTO_PER_1]  
		,R.DTA_ALTERACAO =  CONVERT(CHAR(10),P.[DTA_ALTERACAO],103) 
		,R.[DES_UNIDADE_COMPRA_DANFE] = P.DANFE_UNIDADE 
		,R.NO_PRODUTO_DANFE = P.DANFE_DESC_PRODUTO 
	FROM 
		[192.168.0.6].[ZEUS_RTG].[DBO].[TAB_PRODUTO_FORNECEDOR] AS P WITH (NOLOCK) INNER JOIN @TAB_RETORNO AS R ON (R.COD_LOJA = P.COD_LOJA  AND CAST(R.COD_PRODUTO AS DOUBLE PRECISION) =  CAST(P.COD_PRODUTO  AS DOUBLE PRECISION) AND R.COD_FORNECEDOR  =  P.COD_FORNECEDOR)
	WHERE 1 = 1
	
	UPDATE R
	SET 
		R.QTD_EST_ATUAL = L.[QTD_EST_ATUAL]
		,R.TIPO = L.[CLASSIF_INTERNA] 
		,R.VAL_VENDA = L.VAL_VENDA
		,R.DTA_ULT_MOV_VENDA = L.DTA_ULT_MOV_VENDA
		,R.DTA_ULT_COMPRA = L.DTA_ULT_COMPRA
		,R.QTD_ULT_COMPRA = L.QTD_ULT_COMPRA
		,R.COD_FORN_ULT_COMPRA = L.COD_FORN_ULT_COMPRA
	FROM
		[192.168.0.6].[ZEUS_RTG].[DBO].[TAB_PRODUTO_LOJA] AS L WITH (NOLOCK) INNER JOIN @TAB_RETORNO AS R ON (R.COD_LOJA =  L.COD_LOJA AND R.COD_PRODUTO =  L.COD_PRODUTO COLLATE LATIN1_GENERAL_CI_AS)
	WHERE 1 = 1
		AND NO_PRODUTO IS NOT NULL
		AND LEN(R.COD_PRODUTO) >= 8
	
	-- ----------------------------------------------------------------------------------------------------------------------------------------
	--FIM DA CARGA DE DADOS
	-- ----------------------------------------------------------------------------------------------------------------------------------------
	DECLARE @RESULT_A AS TABLE
	(
	   COD_LOJA INT
	  ,ISOWEEK VARCHAR(7)
	  ,COD_PRODUTO INT
	  ,QTD_PRODUTOX NUMERIC(18,3)
	)
	
	INSERT INTO @RESULT_A
		SELECT
			V.[COD_LOJA]
			,DBO.ISO_WEEK(DATA) AS ISOWEEK
			,V.[COD_PRODUTO]
			, SUM([QTDE_PRODUTO]) AS XXX
		FROM
			[BI].[DBO].[BI_VENDA_PRODUTO] AS V WITH (NOLOCK) INNER JOIN	TAB_RETORNO AS L ON (V.COD_LOJA = L.COD_LOJA AND V.COD_PRODUTO = L.COD_PRODUTO)
		WHERE 1=1
			AND L.COD_SECAO <> 35
			AND COD_FORNECEDOR = @FORN
			AND CONVERT(DATETIME,DATA,112) BETWEEN @DATAINI AND @DATAFIM
			AND L.COD_LOJA IN (1,2,3,6,7,9,12,13,17,18,20,10,4,19,30,21)
		GROUP BY
			V.[COD_LOJA]
			,DBO.ISO_WEEK(DATA)
			,V.[COD_PRODUTO]

	DECLARE @RESULT_B AS TABLE
	(
	   COD_LOJA INT
	  ,COD_PRODUTO INT
	  ,STDEVX NUMERIC(18,3)
	  ,MEDIA NUMERIC(18,3)
	)
	
	INSERT @RESULT_B
		SELECT
			COD_LOJA
			,COD_PRODUTO 
			,STDEV(QTD_PRODUTOX) AS STDEV_QTD_PRODUTO
			,AVG(QTD_PRODUTOX) AS AVG_QTD_MEDIA
		FROM
			@RESULT_A AS A
		GROUP BY
			COD_LOJA
			,COD_PRODUTO
	
	-- ----------------------------------------------------------------------------------------------------------------------------------------
	--ESTOQUE EM DETERMINADO DIA PARA DADO FORNECEDOR
	-- ----------------------------------------------------------------------------------------------------------------------------------------
	SELECT
		L.COD_LOJA AS COD_LOJA
		,L.COD_PRODUTO AS COD_PRODUTO
		,L.COD_SECAO AS COD_SECAO
		,CONVERT(VARCHAR,L.COD_SECAO) + '-' + L.NO_SECAO AS NO_SECAO
		--,ISNULL(L.TIPO, 'NORM') AS TIPO
		,ISNULL(E.CLASSIF_PRODUTO_LOJA, 'Z') AS TIPO
		,L.NO_PRODUTO AS NO_PRODUTO
		,L.[VAL_CUSTO_EMBALAGEM]
		,L.QTD_EMBALAGEM_COMPRA
		,L.DES_UNIDADE_VENDA
		,ISNULL(L.[QTD_EST_ATUAL],0) AS QTD_EST_FIM
		,R.STDEVX AS STD_QTD_P
		,R.MEDIA AS AVG_QTD_P
		,E.STD_QTD_VENDA AS STD_QTD_CLEAN
		,E.AVG_QTD_VENDA AS AVG_QTD_CLEAN
		,L.[VAL_DESCONTO_PER_1]
		,L.IPV
		,L.VAL_VENDA
		--,E.[STD_QTD_VENDA]
		,L.QTD_MINIMA_COMPRA
		,L.DES_UNIDADE_COMPRA
		,CONVERT(CHAR(10),L.DTA_ULT_MOV_VENDA,101) AS DTA_ULT_MOV_VENDA
		,CONVERT(CHAR(10),L.DTA_ULT_COMPRA,101) AS DTA_ULT_COMPRA
		,L.QTD_ULT_COMPRA
		,L.COD_FORN_ULT_COMPRA
		,''''+L.DES_REFERENCIA
		,L.MULT_REFERENCIAS
		,DNV.DNV_LIMITE
		,E.QTD_QUEBRA_PERC_3M AS QTD_QUEBRA_2M
		--, L.ERRO AS ERRO_NEOGRID
		,L.MENSAGEM AS MSG_NEOGRID
	FROM
		@TAB_RETORNO AS L 
			LEFT JOIN @RESULT_B AS R ON (R.COD_LOJA = L.COD_LOJA AND R.COD_PRODUTO = L.COD_PRODUTO)
			LEFT JOIN DBO.COMPRAS_ESTATISTICA_PRODUTO AS E ON (L.COD_LOJA = E.COD_LOJA AND L.COD_PRODUTO = E.COD_PRODUTO)
			LEFT JOIN BI.DBO.COMPRAS_DNV_CALCULADORA AS DNV ON (DNV.COD_LOJA = L.COD_LOJA AND DNV.COD_PRODUTO = L.COD_PRODUTO)
	WHERE 1=1
		AND DNV.DATA_GRAVACAO = CONVERT(DATE,GETDATE())
		AND COD_FORNECEDOR = @FORN
		AND L.COD_SECAO = CASE WHEN @CODSECAO IS NULL THEN L.COD_SECAO ELSE @CODSECAO END
		AND L.COD_LOJA IN (1,2,3,6,7,9,12,13,17,18,20,10,4,19,30,21)
	ORDER BY 1,5

END
GO


